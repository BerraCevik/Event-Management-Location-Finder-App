@model Yazlab_2.Models.ViewModel.ProfileViewModel

<div class="profile-edit-container">
    <form asp-action="EditUser" method="post" enctype="multipart/form-data" class="profile-edit-form">
        <h2 class="form-title">Kullanıcı Bilgileri</h2>

        <!-- Kullanıcı Bilgileri -->
        <div class="form-group">
            <label for="Username">Kullanıcı Adı</label>
            <input type="text" id="Username" name="User.UserName" value="@Model.User.UserName" class="form-control" />
        </div>

        <div class="form-group">
            <label for="FirstName">Ad</label>
            <input type="text" id="FirstName" name="User.FirstName" value="@Model.User.FirstName" class="form-control" />
        </div>

        <div class="form-group">
            <label for="LastName">Soyad</label>
            <input type="text" id="LastName" name="User.LastName" value="@Model.User.LastName" class="form-control" />
        </div>

        <div class="form-group">
            <label for="Email">E-posta</label>
            <input type="email" id="Email" name="User.Email" value="@Model.User.Email" class="form-control" />
        </div>

        <div class="form-group">
            <label for="PhoneNumber">Telefon</label>
            <input type="text" id="PhoneNumber" name="User.PhoneNumber" value="@Model.User.PhoneNumber" class="form-control" />
        </div>

        <div class="form-group">
            <label for="BirthDate">Doğum Tarihi</label>
            <input type="date" id="BirthDate" name="User.BirthDate" value="@Model.User.BirthDate.ToString("yyyy-MM-dd")" class="form-control" />
        </div>

        <div class="form-group">
            <label for="konum">Konum</label>
            <div id="map" style="width: 100%; height: 400px; border: 1px solid #ccc;"></div>
            <input type="text" id="konum" name="Konum" value="@Model.User.Konum" class="form-control" readonly />
        </div>

        <!-- Profil Fotoğrafı -->
        <div class="form-group">
            <label for="ProfilePicture">Profil Fotoğrafı</label>

            <!-- Önceki Profil Fotoğrafı -->
            @if (!string.IsNullOrEmpty(Model.User.ProfilePicture))
            {
                <div class="profile-picture-preview">
                    <img src="@Model.User.ProfilePicture" alt="Profil Fotoğrafı" class="profile-picture" />
                    <p>Mevcut Fotoğraf</p>
                </div>
            }

            <!-- Fotoğraf Seçme -->
            <input type="file" id="ProfilePicture" name="ProfilePicture" class="form-control-file" onchange="previewImage()" />
            <div id="file-name" class="file-name"></div>
        </div>

        <!-- İlgi Alanları -->
        <h3 class="section-title">İlgi Alanlarınız</h3>
        <div class="form-group interests-container">
            <label>İlgi Alanlarını Seçin:</label>
            <div class="checkbox-group">
                @foreach (var category in Model.Categories)
                {
                    <div class="checkbox-item">
                        <input type="checkbox"
                               id="interest-@category.CategoryID"
                               name="SelectedInterests"
                               value="@category.CategoryID"
                        @(Model.SelectedInterests.Contains(category.CategoryID) ? "checked" : "") />
                        <label for="interest-@category.CategoryID">@category.CategoryName</label>
                    </div>
                }
            </div>
        </div>

        <div class="form-actions">
            <button type="submit" class="btn btn-su-yesili">Güncelle</button>
        </div>
    </form>
</div>

<style>
    /* Genel Konteyner */
    .profile-edit-container {
        max-width: 700px;
        margin: 20px auto;
        background-color: #f1fdf7; /* Açık su yeşili arka plan */
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        font-family: Arial, sans-serif;
    }

    /* Başlıklar */
    .form-title {
        text-align: center;
        font-size: 1.8rem;
        margin-bottom: 20px;
        color: #333;
    }

    .section-title {
        font-size: 1.5rem;
        margin-top: 20px;
        color: #333;
        border-bottom: 2px solid #56c2a3;
        display: inline-block;
    }

    /* Form Grupları */
    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            font-weight: bold;
            margin-bottom: 5px;
            display: block;
            color: #333;
        }

    .form-control {
        width: 100%;
        padding: 10px;
        margin-top: 5px;
        border-radius: 5px;
        border: 1px solid #56c2a3; /* Su yeşili sınır */
        font-size: 1rem;
    }

        .form-control:focus {
            border-color: #56c2a3;
            box-shadow: 0 0 5px rgba(86, 194, 163, 0.5);
        }

    .form-control-file {
        margin-top: 5px;
    }

    /* Profil Fotoğrafı */
    .profile-picture-preview {
        text-align: center;
        margin-bottom: 10px;
    }

    .profile-picture {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid #56c2a3;
    }

    .file-name {
        margin-top: 10px;
        color: #333;
    }

    /* İlgi Alanları */
    .interests-container {
        margin-top: 15px;
    }

    .checkbox-group {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
    }

    .checkbox-item {
        display: flex;
        align-items: center;
    }

        .checkbox-item label {
            margin-left: 5px;
            font-size: 1rem;
        }

    /* Butonlar */
    .form-actions {
        text-align: center;
        margin-top: 20px;
    }

    .btn-su-yesili {
        background-color: #56c2a3; /* Su yeşili */
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
    }

        .btn-su-yesili:hover {
            background-color: #4ea58e;
        }
</style>

<script>
    function initMap() {
        const defaultLocation = { lat: 41.103823, lng: 29.024271 };

        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 15,
            center: defaultLocation,
        });

        const marker = new google.maps.Marker({
            position: defaultLocation,
            map: map,
            draggable: true,
        });

        map.addListener("click", (event) => {
            marker.setPosition(event.latLng);
            updateLatLng(event.latLng);
        });

        marker.addListener("dragend", (event) => {
            updateLatLng(event.latLng);
        });

        function updateLatLng(latLng) {
            document.getElementById("konum").value = `${latLng.lat().toFixed(6)}, ${latLng.lng().toFixed(6)}`;
        }
    }

    function previewImage() {
        const fileInput = document.getElementById("ProfilePicture");
        const fileNameDisplay = document.getElementById("file-name");

        if (fileInput.files && fileInput.files[0]) {
            fileNameDisplay.textContent = fileInput.files[0].name;
        } else {
            fileNameDisplay.textContent = "";
        }
    }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCSc3WNHjhSATknV-Y7RX4ZhBFDJKbm868&callback=initMap"></script>
